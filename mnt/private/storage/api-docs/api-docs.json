{
    "openapi": "3.0.0",
    "info": {
        "title": "Mon API",
        "description": "Documentation de l'API",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost/api",
            "description": "API de d√©veloppement"
        }
    ],
    "paths": {
        "/api/abilities": {
            "get": {
                "tags": [
                    "Abilities"
                ],
                "summary": "Get a list of all abilities",
                "operationId": "8878dd9cc0d17f160a9e7b01390e12ff",
                "responses": {
                    "200": {
                        "description": "List of abilities",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Ability"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Abilities"
                ],
                "summary": "Create a new ability",
                "operationId": "641e36f6e546c4ce41884c5932246049",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "SKILL_ID",
                                    "ABI_LABEL"
                                ],
                                "properties": {
                                    "SKILL_ID": {
                                        "type": "integer"
                                    },
                                    "ABI_LABEL": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Ability created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ability"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/abilities/{id}": {
            "get": {
                "tags": [
                    "Abilities"
                ],
                "summary": "Get a specific ability by ID",
                "operationId": "f563e02d738fdc9404c02b777e85675e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ability",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ability found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ability"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ability not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Abilities"
                ],
                "summary": "Update an existing ability",
                "operationId": "4c20730d4bfd162b4b789fea3caaae57",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ability",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Ability"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ability updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ability"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Ability not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Abilities"
                ],
                "summary": "Delete an ability",
                "operationId": "3d2395d936cd1464c9f44d7b5834e041",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ability",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Ability deleted successfully"
                    },
                    "404": {
                        "description": "Ability not found"
                    }
                }
            }
        },
        "/api/login": {
            "get": {
                "tags": [
                    "Login"
                ],
                "summary": "Displays the login page",
                "operationId": "502e09d4edf3fc40004e53dd6b4a6b78",
                "responses": {
                    "200": {
                        "description": "Login page displayed successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged in"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/api/clubs": {
            "get": {
                "tags": [
                    "Clubs"
                ],
                "summary": "Retrieve all clubs",
                "operationId": "c44731a8866e74bcd14a6b4f0f1f82b6",
                "responses": {
                    "200": {
                        "description": "List of all clubs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Club"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Clubs"
                ],
                "summary": "Create a new club",
                "operationId": "4e37feabfe957444c16ab299c31af0a7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "club_name",
                                    "club_postalcode",
                                    "club_city",
                                    "club_address"
                                ],
                                "properties": {
                                    "club_name": {
                                        "type": "string",
                                        "example": "Football Club"
                                    },
                                    "club_postalcode": {
                                        "type": "integer",
                                        "example": 75001
                                    },
                                    "club_city": {
                                        "type": "string",
                                        "example": "Paris"
                                    },
                                    "club_address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Club created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Club"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/clubs/{id}": {
            "get": {
                "tags": [
                    "Clubs"
                ],
                "summary": "Retrieve a specific club by ID",
                "operationId": "b5900ff997f9d991c3a388875d8971f8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Club ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Club found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Club"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Club not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Clubs"
                ],
                "summary": "Update an existing club",
                "operationId": "9a7201b06d26cfc6aa54fe93f98774d2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Club ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "club_name",
                                    "club_postalcode",
                                    "club_city",
                                    "club_address"
                                ],
                                "properties": {
                                    "club_name": {
                                        "type": "string"
                                    },
                                    "club_postalcode": {
                                        "type": "integer"
                                    },
                                    "club_city": {
                                        "type": "string"
                                    },
                                    "club_address": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Club updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Club"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Club not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Clubs"
                ],
                "summary": "Delete a specific club",
                "operationId": "7ae9561f331895c99ba0d047eb68ba96",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Club ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Club deleted successfully"
                    },
                    "404": {
                        "description": "Club not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/evaluations/history/{userId}/{clubId}": {
            "get": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Displays the evaluation history for a given user and club",
                "operationId": "bf73df24555cdfe25eb2caa5fe5ec4cc",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "clubId",
                        "in": "path",
                        "description": "The ID of the club",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Evaluation history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Evaluation"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User or club not found"
                    }
                }
            }
        },
        "/api/evaluations/search": {
            "get": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Search for evaluations based on various filters",
                "operationId": "0b014d6a66511bb52ed62a98e67be217",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "Filter by user ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Evaluation"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/evaluations/update": {
            "post": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Update or create an evaluation",
                "operationId": "fa30472c1d58c73a5136fba6b36f8ac0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "eval_id",
                                    "statut_id",
                                    "user_id",
                                    "abi_id",
                                    "sess_id"
                                ],
                                "properties": {
                                    "eval_id": {
                                        "type": "integer"
                                    },
                                    "statut_id": {
                                        "type": "integer"
                                    },
                                    "user_id": {
                                        "type": "integer"
                                    },
                                    "abi_id": {
                                        "type": "integer"
                                    },
                                    "sess_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Evaluation updated or created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nouvelle √©valuation cr√©√©e avec succ√®s!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/first-connexion": {
            "get": {
                "tags": [
                    "First Connexion"
                ],
                "summary": "Display the 'First Connection' form for a specific user",
                "operationId": "e41acac16b384b62477f049e66234322",
                "parameters": [
                    {
                        "name": "user",
                        "in": "query",
                        "description": "The ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "First connection form displayed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "utilisateur": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "First Connexion"
                ],
                "summary": "Handle the form submission for setting a new password during the first login",
                "operationId": "a7c2f351d8e9c5664f584b86a0d09ab8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "inputNewPassword",
                                    "inputPasswordVerif"
                                ],
                                "properties": {
                                    "inputNewPassword": {
                                        "description": "The new password",
                                        "type": "string"
                                    },
                                    "inputPasswordVerif": {
                                        "description": "The confirmation of the new password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The new password does not match the verification"
                    }
                }
            }
        },
        "/api/forms-training": {
            "get": {
                "tags": [
                    "Forms Training"
                ],
                "summary": "Retrieve all trainers and students",
                "operationId": "d1fefa30505de54362cf4803875eb156",
                "responses": {
                    "200": {
                        "description": "Retrieved all trainers and students successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "trainings": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "studies": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        },
                                        "trainDatas": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Training"
                                            }
                                        },
                                        "levelIds": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Level"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied"
                    }
                }
            }
        },
        "/api/forms-training/validate": {
            "post": {
                "tags": [
                    "Forms Training"
                ],
                "summary": "Validate and process the training forms data for trainers and students",
                "operationId": "a106548edd66e21d40ed090374c76ff3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "TRAIN_RESPONSABLE_ID",
                                    "TRAIN_ID",
                                    "initiators",
                                    "students"
                                ],
                                "properties": {
                                    "TRAIN_RESPONSABLE_ID": {
                                        "type": "integer"
                                    },
                                    "TRAIN_ID": {
                                        "type": "integer"
                                    },
                                    "initiators": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "students": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Training forms validated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Les initiateurs et √©tudiants ont √©t√© mis √† jour avec succ√®s!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/forms-training/validate2": {
            "post": {
                "tags": [
                    "Forms Training"
                ],
                "summary": "Validate and process the addition of a new skill",
                "operationId": "c557de8ca25fb822f119a6b4454a5cec",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "LEVEL_ID",
                                    "SKILL_LABEL"
                                ],
                                "properties": {
                                    "LEVEL_ID": {
                                        "type": "integer"
                                    },
                                    "SKILL_LABEL": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New skill added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "L'ajout d'une comp√©tence a √©t√© effectu√© avec succ√®s!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/forms-training/modification-technical": {
            "get": {
                "tags": [
                    "Forms Training"
                ],
                "summary": "Show modification technical form",
                "operationId": "efa816a2bfe479b8b4ab616146f8fd84",
                "responses": {
                    "200": {
                        "description": "Retrieved abilities successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Ability"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/forms-training/update-abilities": {
            "post": {
                "tags": [
                    "Forms Training"
                ],
                "summary": "Update abilities",
                "operationId": "c89fee45bf36676c9b2c61df3ca7042d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "abilitie_id",
                                    "new_abilitie_id"
                                ],
                                "properties": {
                                    "abilitie_id": {
                                        "type": "integer"
                                    },
                                    "new_abilitie_id": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ability updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ability updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/club-name": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Fetch the club name associated with the logged-in user and display it on the Home page",
                "operationId": "e4b2ea74a16ad13b74494210680bbf9c",
                "responses": {
                    "200": {
                        "description": "Club name fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "clubName": {
                                            "description": "The name of the club",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "User not logged in"
                    },
                    "404": {
                        "description": "Club not found"
                    }
                }
            }
        },
        "/api/levels": {
            "get": {
                "tags": [
                    "Levels"
                ],
                "summary": "Get all levels",
                "operationId": "b21200cd0ebde08419a3347af27dcad7",
                "responses": {
                    "200": {
                        "description": "List of levels",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Level"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Levels not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Levels"
                ],
                "summary": "Create a new level",
                "operationId": "358e86e640b38b4360f0ed7ffa336d58",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "LEVEL_LABEL"
                                ],
                                "properties": {
                                    "LEVEL_LABEL": {
                                        "type": "string",
                                        "example": "Beginner"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Level created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Level"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/levels/{id}": {
            "get": {
                "tags": [
                    "Levels"
                ],
                "summary": "Pick-up a specific level by ID",
                "operationId": "b3c3ecc8978bbd74073761046fb4f113",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID level",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Find level",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Level"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Level not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Levels"
                ],
                "summary": "Update existing level",
                "operationId": "4176bd984204f4faaf9389a29ef8464c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID Level",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "LEVEL_LABEL"
                                ],
                                "properties": {
                                    "LEVEL_LABEL": {
                                        "type": "string",
                                        "example": "Advanced"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Level updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Level"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Level not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Levels"
                ],
                "summary": "Delete a level",
                "operationId": "3b49e7cd9e044056aa55c17c9ac8766d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID Level",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted level",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Level deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Level not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/users/search": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Searches for users by first name, last name, or license number",
                "operationId": "e31af0f075527c9d2ccd7c7c01de0ed6",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users matching the search term",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve a specific user by ID",
                "operationId": "36a33ff774d5cba33c039dec2c3e0287",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Updates a user's information",
                "operationId": "07b85e59f0acce0a8ba0121c87a61406",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "USER_FIRSTNAME",
                                    "USER_LASTNAME",
                                    "USER_LICENSENUMBER",
                                    "USER_MAIL",
                                    "USER_PHONENUMBER",
                                    "USER_ADDRESS",
                                    "USER_POSTALCODE",
                                    "TYPE_ID",
                                    "LEVEL_ID_RESUME",
                                    "USER_MEDICCERTIFICATEDATE"
                                ],
                                "properties": {
                                    "USER_FIRSTNAME": {
                                        "type": "string"
                                    },
                                    "USER_LASTNAME": {
                                        "type": "string"
                                    },
                                    "USER_LICENSENUMBER": {
                                        "type": "string"
                                    },
                                    "USER_MAIL": {
                                        "type": "string"
                                    },
                                    "USER_PHONENUMBER": {
                                        "type": "string"
                                    },
                                    "USER_ADDRESS": {
                                        "type": "string"
                                    },
                                    "USER_POSTALCODE": {
                                        "type": "string"
                                    },
                                    "TYPE_ID": {
                                        "type": "integer"
                                    },
                                    "LEVEL_ID_RESUME": {
                                        "type": "integer"
                                    },
                                    "USER_MEDICCERTIFICATEDATE": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User information successfully updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User information successfully updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Deactivates a user by setting USER_ISACTIVE to 0",
                "operationId": "7f267b8007efaa4c774b27392c09c8f0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deactivated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully deactivated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/profile/update": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Updates the user's information (email, phone, address, postal code)",
                "operationId": "b08980cc0e7f23574681c256ab16e35a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "inputEmail",
                                    "inputPhoneNumber",
                                    "inputAddress",
                                    "inputPostalCode"
                                ],
                                "properties": {
                                    "inputEmail": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "inputPhoneNumber": {
                                        "type": "string",
                                        "example": "123-456-7890"
                                    },
                                    "inputAddress": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "inputPostalCode": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User information updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Profile"
                ],
                "summary": "Logs the user out and redirects them to the login page",
                "operationId": "f68b40b884695318dcf0ecaad91d54b2",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile/password": {
            "put": {
                "tags": [
                    "Profile"
                ],
                "summary": "Updates the user's password",
                "operationId": "7cf63ef77ae59c4d77e571a5d2a23993",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "inputActualPassword",
                                    "inputNewPassword",
                                    "inputPasswordVerif"
                                ],
                                "properties": {
                                    "inputActualPassword": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "currentpassword123"
                                    },
                                    "inputNewPassword": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "inputPasswordVerif": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Authentication failed"
                    }
                }
            }
        },
        "/api/sessions": {
            "get": {
                "tags": [
                    "Session"
                ],
                "summary": "Displays the session details and related data for the user",
                "operationId": "4686401161ff05760d80ddf1cc6e948f",
                "responses": {
                    "200": {
                        "description": "Session details displayed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "club": {
                                            "properties": {
                                                "club_name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "sessions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "abilities": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "initiator": {
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/session-types": {
            "get": {
                "tags": [
                    "Session Types"
                ],
                "summary": "Retrieve all session types",
                "operationId": "d3259be72b185a4fc96dcc882f335a73",
                "responses": {
                    "200": {
                        "description": "List of all session types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SessionType"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Session Types"
                ],
                "summary": "Create a new session type",
                "operationId": "f760f8a1896d7201c06e6fcd551ea573",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "SESSTYPE_LABEL"
                                ],
                                "properties": {
                                    "SESSTYPE_LABEL": {
                                        "type": "string",
                                        "example": "Theoretical training"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Session Type Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionType"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/session-types/{id}": {
            "get": {
                "tags": [
                    "Session Types"
                ],
                "summary": "Retrieve a specific session type by ID",
                "operationId": "63a95297f0f46da5f744a8a7cbeecf79",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Session Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session type found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session type not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Session Types"
                ],
                "summary": "Update an existing session type",
                "operationId": "286a242819b71a01826f0dbae000dff5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Session Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "SESSTYPE_LABEL"
                                ],
                                "properties": {
                                    "SESSTYPE_LABEL": {
                                        "type": "string",
                                        "example": "Practical training"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Session type updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionType"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session type not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Session Types"
                ],
                "summary": "Delete a session type",
                "operationId": "98ae20cadf3a2211a1277f557c5b6306",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Session Type ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session type deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Session type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Session type not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/signin": {
            "post": {
                "tags": [
                    "SignIn"
                ],
                "summary": "Handle the sign-in process by validating and creating a new user",
                "operationId": "3a8da166fd4df89636b15574b45fe6a8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "USER_MAIL",
                                    "USER_FIRSTNAME",
                                    "USER_LASTNAME",
                                    "USER_PHONENUMBER",
                                    "USER_BIRTHDATE",
                                    "USER_ADDRESS",
                                    "USER_POSTALCODE",
                                    "USER_LICENSENUMBER",
                                    "USER_MEDICCERTIFICATEDATE",
                                    "LEVEL_ID",
                                    "TYPE_ID"
                                ],
                                "properties": {
                                    "USER_MAIL": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "USER_FIRSTNAME": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "USER_LASTNAME": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "USER_PHONENUMBER": {
                                        "type": "string",
                                        "example": "123-456-7890"
                                    },
                                    "USER_BIRTHDATE": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "USER_ADDRESS": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "USER_POSTALCODE": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "USER_LICENSENUMBER": {
                                        "type": "string",
                                        "example": "A1234567"
                                    },
                                    "USER_MEDICCERTIFICATEDATE": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-01-09"
                                    },
                                    "LEVEL_ID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "TYPE_ID": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User signed in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "password": {
                                            "type": "string",
                                            "example": "randompassword"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/site/edit": {
            "get": {
                "tags": [
                    "Site"
                ],
                "summary": "Show the edit form for modifying the site's settings",
                "operationId": "80442b398c1d14ac7a674ffe940422b9",
                "responses": {
                    "200": {
                        "description": "Edit form displayed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "siteName": {
                                            "type": "string",
                                            "example": "Secoule"
                                        },
                                        "siteColor": {
                                            "type": "string",
                                            "example": "#005C8F"
                                        },
                                        "siteLogo": {
                                            "type": "string",
                                            "format": "base64",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Club ID not found"
                    }
                }
            }
        },
        "/api/site/update": {
            "post": {
                "tags": [
                    "Site"
                ],
                "summary": "Handle the form submission to update the site's settings",
                "operationId": "d7df65b431c7db9926788187f8a68e85",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "site_name",
                                    "site_color"
                                ],
                                "properties": {
                                    "site_name": {
                                        "type": "string",
                                        "example": "Secoule"
                                    },
                                    "site_color": {
                                        "type": "string",
                                        "format": "hex",
                                        "example": "#005C8F"
                                    },
                                    "site_logo": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Site information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Site information has been successfully updated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Club ID not found"
                    }
                }
            }
        },
        "/api/skills": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "Collect all skills",
                "operationId": "6acb38b223d6471cc32eab45ea57be4b",
                "responses": {
                    "200": {
                        "description": "List of all skills",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Skill"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Skills"
                ],
                "summary": "Create a new skill",
                "operationId": "4725cd560d3046ae33bd690208e21d41",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "LEVEL_ID",
                                    "SKILL_LABEL"
                                ],
                                "properties": {
                                    "LEVEL_ID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "SKILL_LABEL": {
                                        "type": "string",
                                        "example": "Programming skills"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Skill created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Skill"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/skills/{id}": {
            "get": {
                "tags": [
                    "Skills"
                ],
                "summary": "Retrieve a specific skill by ID",
                "operationId": "81b9cbc27bbdd8b5a6591975bf75441a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Skill ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Skill found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Skill"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Skill not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Skills"
                ],
                "summary": "Update an existing skill",
                "operationId": "6c932a7a6f40be346ab93e4dd28f14f2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Skill ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "LEVEL_ID",
                                    "SKILL_LABEL"
                                ],
                                "properties": {
                                    "LEVEL_ID": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "SKILL_LABEL": {
                                        "type": "string",
                                        "example": "Graphic design skills"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Skill updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Skill"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Skill not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Skills"
                ],
                "summary": "Delete a skill",
                "operationId": "7401a82a4b0de61e80c67901e89d62dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Skill ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Skill removed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Skill deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Skill not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/students": {
            "get": {
                "tags": [
                    "Student"
                ],
                "summary": "Get the details of a student's sessions and evaluations",
                "operationId": "e39bdd4a3ccb763e0abaddd2af0f97f8",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID of the student",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "html": {
                                            "type": "string",
                                            "example": "<table>...</table>"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            }
        },
        "/api/trainings": {
            "get": {
                "tags": [
                    "Trainings"
                ],
                "summary": "Get list of trainings",
                "operationId": "e07cf415ceea9bd0ecac468c94a8e589",
                "responses": {
                    "200": {
                        "description": "List of trainings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Training"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            },
            "post": {
                "tags": [
                    "Trainings"
                ],
                "summary": "Create a new training",
                "operationId": "12e99115a89804e25ad6b9dd9caeda48",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "TRAIN_ID",
                                    "title",
                                    "description",
                                    "responsable_id"
                                ],
                                "properties": {
                                    "TRAIN_ID": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "responsable_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Training created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/trainings/{id}": {
            "get": {
                "tags": [
                    "Trainings"
                ],
                "summary": "Get a specific training by ID",
                "operationId": "785ae259c6003046917b5025847da1bc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the training",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Training found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Training not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Trainings"
                ],
                "summary": "Update an existing training",
                "operationId": "0ed019fca6c0d443d4a3b029eb8e7f20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the training",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "TRAIN_ID",
                                    "title",
                                    "description",
                                    "responsable_id"
                                ],
                                "properties": {
                                    "TRAIN_ID": {
                                        "type": "integer"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "responsable_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Training updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Training not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Trainings"
                ],
                "summary": "Delete a specific training",
                "operationId": "ea493862e1ea91055870bba50d7e9348",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the training",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Training deleted successfully"
                    },
                    "404": {
                        "description": "Training not found"
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve all users",
                "operationId": "c457726701591d1183b53aa71fc13441",
                "responses": {
                    "200": {
                        "description": "List of all users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "operationId": "592819a0265360b2014512d6dbfaf0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "USER_MAIL",
                                    "USER_PASSWORD"
                                ],
                                "properties": {
                                    "USER_MAIL": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "USER_PASSWORD": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secretpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/validations": {
            "get": {
                "tags": [
                    "Validations"
                ],
                "summary": "Retrieve all validations",
                "operationId": "93f4ef39ef1c5d82b3cc2f0615e3e8fd",
                "responses": {
                    "200": {
                        "description": "List of all validations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Validation"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Validations"
                ],
                "summary": "Create a new validation",
                "operationId": "0136323dbd652ab5382e4e3e4afd3c26",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "SKILL_ID",
                                    "ABI_ID",
                                    "LEVEL_ID",
                                    "EVAL_ID",
                                    "VALID_DATE"
                                ],
                                "properties": {
                                    "SKILL_ID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "ABI_ID": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "LEVEL_ID": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "EVAL_ID": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "VALID_DATE": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Validation created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Validation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/validations/{id}": {
            "get": {
                "tags": [
                    "Validations"
                ],
                "summary": "Retrieve a specific validation by ID",
                "operationId": "42cf45319da73b096275c40a5e981276",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Validation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validation found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Validation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Validations"
                ],
                "summary": "Update an existing validation",
                "operationId": "db20ae20b327e9a8142b5dfd0b64f726",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Validation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "SKILL_ID",
                                    "ABI_ID",
                                    "LEVEL_ID",
                                    "EVAL_ID",
                                    "VALID_DATE"
                                ],
                                "properties": {
                                    "SKILL_ID": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "ABI_ID": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "LEVEL_ID": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "EVAL_ID": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "VALID_DATE": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Validation updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Validation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Validations"
                ],
                "summary": "Delete a validation",
                "operationId": "de8eb9dd2e744e2ee8f805a0d8d2088d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Validation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Validation deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name"
                ],
                "properties": {
                    "id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "email": {
                        "description": "User email",
                        "type": "string",
                        "format": "email"
                    },
                    "first_name": {
                        "description": "User first name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "User last name",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "User phone number",
                        "type": "string"
                    },
                    "address": {
                        "description": "User address",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "User postal code",
                        "type": "string"
                    },
                    "license_number": {
                        "description": "User license number",
                        "type": "string"
                    },
                    "medical_certificate_date": {
                        "description": "User medical certificate date",
                        "type": "string",
                        "format": "date"
                    }
                },
                "type": "object"
            },
            "Club": {
                "required": [
                    "club_name",
                    "club_postalcode",
                    "club_city",
                    "club_address"
                ],
                "properties": {
                    "id": {
                        "description": "Club ID",
                        "type": "integer"
                    },
                    "club_name": {
                        "description": "Club name",
                        "type": "string"
                    },
                    "club_postalcode": {
                        "description": "Postal code",
                        "type": "integer"
                    },
                    "club_city": {
                        "description": "City",
                        "type": "string"
                    },
                    "club_address": {
                        "description": "Address",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "SessionType": {
                "required": [
                    "SESSTYPE_LABEL"
                ],
                "properties": {
                    "id": {
                        "description": "Session Type ID",
                        "type": "integer"
                    },
                    "SESSTYPE_LABEL": {
                        "description": "Session Type Label",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Skill": {
                "required": [
                    "LEVEL_ID",
                    "SKILL_LABEL"
                ],
                "properties": {
                    "id": {
                        "description": "Skill ID",
                        "type": "integer"
                    },
                    "LEVEL_ID": {
                        "description": "Level ID",
                        "type": "integer"
                    },
                    "SKILL_LABEL": {
                        "description": "Skill Label",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Training": {
                "required": [
                    "TRAIN_ID",
                    "title",
                    "description",
                    "responsable_id"
                ],
                "properties": {
                    "id": {
                        "description": "Training ID",
                        "type": "integer"
                    },
                    "TRAIN_ID": {
                        "description": "Training Unique ID",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Training Title",
                        "type": "string"
                    },
                    "description": {
                        "description": "Training Description",
                        "type": "string"
                    },
                    "responsable_id": {
                        "description": "Responsible User ID",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Creation Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update Timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Validation": {
                "required": [
                    "SKILL_ID",
                    "ABI_ID",
                    "LEVEL_ID",
                    "EVAL_ID",
                    "VALID_DATE"
                ],
                "properties": {
                    "id": {
                        "description": "Validation ID",
                        "type": "integer"
                    },
                    "SKILL_ID": {
                        "description": "Skill ID",
                        "type": "integer"
                    },
                    "ABI_ID": {
                        "description": "Ability ID",
                        "type": "integer"
                    },
                    "LEVEL_ID": {
                        "description": "Level ID",
                        "type": "integer"
                    },
                    "EVAL_ID": {
                        "description": "Evaluation ID",
                        "type": "integer"
                    },
                    "VALID_DATE": {
                        "description": "Validation Date",
                        "type": "string",
                        "format": "date"
                    },
                    "created_at": {
                        "description": "Creation Timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update Timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Ability": {
                "required": [
                    "id",
                    "SKILL_ID",
                    "ABI_LABEL"
                ],
                "properties": {
                    "id": {
                        "description": "ID of the ability",
                        "type": "integer"
                    },
                    "SKILL_ID": {
                        "description": "Skill ID associated with the ability",
                        "type": "integer"
                    },
                    "ABI_LABEL": {
                        "description": "Label of the ability",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Evaluation": {
                "required": [
                    "USER_ID",
                    "STATUSTYPE_ID",
                    "SESS_ID",
                    "ABI_ID"
                ],
                "properties": {
                    "id": {
                        "description": "Evaluation ID",
                        "type": "integer"
                    },
                    "USER_ID": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "STATUSTYPE_ID": {
                        "description": "Status Type ID",
                        "type": "integer"
                    },
                    "SESS_ID": {
                        "description": "Session ID",
                        "type": "integer"
                    },
                    "ABI_ID": {
                        "description": "Ability ID",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Level": {
                "required": [
                    "LEVEL_ID",
                    "LEVEL_LABEL"
                ],
                "properties": {
                    "LEVEL_ID": {
                        "description": "ID of the level",
                        "type": "integer"
                    },
                    "LEVEL_LABEL": {
                        "description": "Label of the level",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Session": {
                "required": [
                    "SESS_ID",
                    "TRAIN_ID",
                    "TYPE_ID",
                    "SESSTYPE_ID"
                ],
                "properties": {
                    "SESS_ID": {
                        "description": "ID de la session",
                        "type": "integer"
                    },
                    "TRAIN_ID": {
                        "description": "ID de la formation associ√©e",
                        "type": "integer"
                    },
                    "TYPE_ID": {
                        "description": "ID du type de session",
                        "type": "integer"
                    },
                    "SESSTYPE_ID": {
                        "description": "ID du type de session",
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Abilities",
            "description": "Abilities"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Clubs",
            "description": "Clubs"
        },
        {
            "name": "Evaluations",
            "description": "Evaluations"
        },
        {
            "name": "First Connexion",
            "description": "First Connexion"
        },
        {
            "name": "Forms Training",
            "description": "Forms Training"
        },
        {
            "name": "Home",
            "description": "Home"
        },
        {
            "name": "Levels",
            "description": "Levels"
        },
        {
            "name": "Login",
            "description": "Login"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Profile",
            "description": "Profile"
        },
        {
            "name": "Session",
            "description": "Session"
        },
        {
            "name": "Session Types",
            "description": "Session Types"
        },
        {
            "name": "SignIn",
            "description": "SignIn"
        },
        {
            "name": "Site",
            "description": "Site"
        },
        {
            "name": "Skills",
            "description": "Skills"
        },
        {
            "name": "Student",
            "description": "Student"
        },
        {
            "name": "Trainings",
            "description": "Trainings"
        },
        {
            "name": "Validations",
            "description": "Validations"
        }
    ]
}